name: Docker

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  pull_request:
    branches:
      - main

env:
  REGISTRY: gitea.tailb0283.ts.net
  IMAGE_NAME: ${{ gitea.repository }}

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Docker Context for Buildx
        run: |
          docker context create builders || docker context use builders

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
        with:
          endpoint: builders
          driver-opts: image=moby/buildkit:latest
          buildkitd-flags: --debug

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          file: ./Dockerfile
          context: .
          platforms: |
            linux/amd64
            linux/arm64
          outputs: type=oci,dest=./output.tar
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/buildx-cache,compression=zstd
          cache-to: type=local,dest=/buildx-cache,compression=zstd,mode=max

      - name: Setup skopeo
        if: gitea.event_name != 'pull_request'
        run: |
          curl -sL https://github.com/lework/skopeo-binary/releases/download/v1.20.0/skopeo-linux-amd64 -o skopeo
          chmod +x ./skopeo
          mv ./skopeo /usr/bin/skopeo
          mkdir -p /etc/containers
          tee > /etc/containers/policy.json <<EOF
          {
              "default": [
                  {
                      "type": "insecureAcceptAnything"
                  }
              ],
              "transports":
                  {
                      "docker-daemon":
                          {
                              "": [{"type":"insecureAcceptAnything"}]
                          }
                  }
          }
          EOF
          skopeo --version

      - name: Push Docker image
        if: gitea.event_name != 'pull_request'
        env:
          IMAGES: ${{ steps.meta.outputs.tags }}
        run: |
          echo "${{ secrets.PACKAGE_PAT }}" | skopeo login --tls-verify=false ${{ env.REGISTRY }} -u ${{ gitea.actor }} --password-stdin
          for IMAGE in $IMAGES; do
            TAG=${IMAGE#${{ env.REGISTRY }}/$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]'):}
            echo "Pushing image: \"$IMAGE\"", tag: \"$TAG\""."
            skopeo copy --dest-tls-verify=false --multi-arch=all oci-archive:./output.tar:$TAG docker://$IMAGE
          done

  update-github-manifests:
    if: startsWith(gitea.ref, 'refs/tags/')
    needs: build-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout manifests repository
        uses: actions/checkout@v5
        with:
          repository: home-infra/manifests
          path: manifests
          token: ${{ secrets.REPOSITORY_PAT }}

      - name: Setup Git
        run: |
          set -x
          git config --global user.name "Gitea Actions"
          git config --global user.email "actions@gitea.tailb0283.ts.net"

      - name: Setup kustomize
        run: |
          curl -sL "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          chmod +x ./kustomize
          mv ./kustomize /usr/bin/kustomize

      - name: Update image tag
        working-directory: manifests
        run: |
          export IMAGE_NAME_LOWER=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          cd kubernetes/apps-autosync/bot-farm/smart-home-bot
          kustomize edit set image ${{ env.REGISTRY }}/$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]'):${{ gitea.ref_name }}
          git add .
          git commit -m "Update ${{ env.REGISTRY }}/$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]') image to ${{ gitea.ref_name }}"
          git push
